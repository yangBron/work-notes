import{_ as t,c as d,o as r,a1 as e}from"./chunks/framework.DO75OpyS.js";const x=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Notes/Command/skill.md","filePath":"Notes/Command/skill.md","lastUpdated":null}'),i={name:"Notes/Command/skill.md"},l=e('<h1 align="center" style="color:#000000;">skill</h1><h3 id="shell命令" tabindex="-1">Shell命令 <a class="header-anchor" href="#shell命令" aria-label="Permalink to &quot;Shell命令&quot;">​</a></h3><table tabindex="0"><thead><tr><th>分类</th><th>命令</th><th>用途</th><th>示例</th></tr></thead><tbody><tr><td>文件操作</td><td>ls</td><td>列出当前目录下的文件和子目录</td><td>ls -l /path/to/directory</td></tr><tr><td>文件操作</td><td>cd</td><td>改变当前工作目录</td><td>cd /path/to/directory</td></tr><tr><td>文件操作</td><td>pwd</td><td>显示当前工作目录的路径</td><td>pwd</td></tr><tr><td>文件操作</td><td>mkdir</td><td>创建一个新目录</td><td>mkdir new directory</td></tr><tr><td>文件操作</td><td>rm</td><td>删除一个文件或目录</td><td>rm file.txt 或 rm -r directory</td></tr><tr><td>文件操作</td><td>cp</td><td>复制一个文件或目录</td><td>cp xx 或 cp -r xx</td></tr><tr><td>文件操作</td><td>mv</td><td>移动或重命名一个文件或目录</td><td>mv oldname newname 或 mv olddir newdir</td></tr><tr><td>文件操作</td><td>touch</td><td>创建一个新文件或更新一个已经存在文件的时间戳</td><td>touch newfile.txt</td></tr><tr><td>文件查看</td><td>cat</td><td>连接文件并打印到标准输出</td><td>cat file.txt</td></tr><tr><td>文件查看</td><td>less</td><td>分页查看文本文件的内容</td><td>less file.txt</td></tr><tr><td>文本处理</td><td>grep</td><td>在文件中搜索指定的字符串</td><td>grep pattern file.txt</td></tr><tr><td>文件查找</td><td>find</td><td>查找文件或目录</td><td>find / -name filename.txt</td></tr><tr><td>文件压缩</td><td>tar</td><td>打包、压缩和解压文件和目录</td><td>tar -cvzf archive.tar.gz directory/或 tar -xvzf archive.tar.gz</td></tr><tr><td>文件下载</td><td>wget</td><td>下载文件</td><td>wget url</td></tr><tr><td>远程访问</td><td>ssh</td><td>远程登录到另一个计算机</td><td>ssh username@hostname</td></tr><tr><td>远程复制</td><td>scp</td><td>在本地主机和远程主机之前复制文件</td><td>scp file.txt username@hostname:/remote/directory</td></tr><tr><td>权限管理</td><td>chmod</td><td>修改文件权限</td><td>chmod u=rw,go=r file.txt</td></tr><tr><td>用户管理</td><td>chown</td><td>更改文件所有者</td><td>chown username file.txt</td></tr><tr><td>进程管理</td><td>ps</td><td>列出运行中的进行</td><td>ps -e</td></tr><tr><td>进程管理</td><td>kill</td><td>终止一个正在运行的进程</td><td>kill PID</td></tr><tr><td>系统监控</td><td>top</td><td>实时显示系统资源使用情况</td><td>top</td></tr></tbody></table><h3 id="提取文件名称" tabindex="-1">提取文件名称 <a class="header-anchor" href="#提取文件名称" aria-label="Permalink to &quot;提取文件名称&quot;">​</a></h3><p>介绍下Shell中的${}、##和 %% 使用范例，本文给出了不同情况下得到的结果。 假设定义了一个变量为： 代码如下: file=/dir1/dir2/dir3/my.file.txt 可以用${ }分别替换得到不同的值： ${file#* /}：删掉第一个 / 及其左边的字符串：dir1/dir2/dir3/my.file.txt ${file##* /}：删掉最后一个 / 及其左边的字符串：my.file.txt ${file#* .}：删掉第一个 . 及其左边的字符串：file.txt ${file##* .}：删掉最后一个 . 及其左边的字符串：txt ${file%/* }：删掉最后一个 / 及其右边的字符串：/dir1/dir2/dir3 ${file%%/* }：删掉第一个 / 及其右边的字符串：(空值) ${file%.* }：删掉最后一个 . 及其右边的字符串：/dir1/dir2/dir3/my.file ${file%%.* }：删掉第一个 . 及其右边的字符串：/dir1/dir2/dir3/my 记忆的方法为： &#39;#&#39;是 去掉左边（键盘上#在 $ 的左边） %是去掉右边（键盘上% 在$ 的右边） 单一符号是最小匹配；两个符号是最大匹配 ${file:0:5}：提取最左边的 5 个字节：/dir1 ${file:5:5}：提取第 5 个字节右边的连续5个字节：/dir2 也可以对变量值里的字符串作替换： ${file/dir/path}：将第一个dir 替换为path：/path1/dir2/dir3/my.file.txt ${file//dir/path}：将全部dir 替换为 path：/path1/path2/path3/my.file.txt</p>',5),a=[l];function o(s,h,c,n,m,f){return r(),d("div",null,a)}const _=t(i,[["render",o]]);export{x as __pageData,_ as default};
